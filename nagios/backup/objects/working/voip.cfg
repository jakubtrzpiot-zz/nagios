###############################################################################
###############################################################################
#
# HOST DEFINITIONS
#
###############################################################################
###############################################################################

# Define the switch that we'll be monitoring

define host{
	use		generic-voip		; Inherit default values from a template
	host_name	IP3010_S0.0		; The name we're giving to this switch
	alias		innovaphone IP3010 VoIP Gateway
	address		172.16.194.1		; IP address of the switch
	hostgroups	VoIP			; Host groups this switch is associated with
	}
define host{
	use		generic-voip		; Inherit default values from a template
	host_name	IP28_S1			; The name we're giving to this switch
	alias		innovaphone IP28 VoIP Analog Adapter
	address		172.16.194.2		; IP address of the switch
	hostgroups	VoIP			; Host groups this switch is associated with
	}
define host{
	use		generic-voip		; Inherit default values from a template
	host_name	IP28_S7			; The name we're giving to this switch
	alias		innovaphone IP28 VoIP Analog Adapter
	address		172.16.194.3		; IP address of the switch
	hostgroups	VoIP			; Host groups this switch is associated with
	}
define host{
	use		generic-voip		; Inherit default values from a template
	host_name	IP29_S3			; The name we're giving to this switch
	alias		innovaphone IP29 VoIP Analog Adapter
	address		172.16.194.4		; IP address of the switch
	hostgroups	VoIP			; Host groups this switch is associated with
	}
###############################################################################
###############################################################################
#
# HOST GROUP DEFINITIONS
#
###############################################################################
###############################################################################

# Create a new hostgroup for switches

define hostgroup{
	hostgroup_name	VoIP		; The name of the hostgroup
	alias		VoIP
	}

###############################################################################
###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################
###############################################################################

# Create a service to PING to switch

define service{
	use			generic-service	; Inherit values from a template
	host_name		IP3010_S0.0	; The name of the host the service is associated with
	service_description	PING		; The service description
	check_command		check_ping!200.0,20%!600.0,60%	; The command used to monitor the service
	check_interval	5		; Check the service every 5 minutes under normal conditions
	retry_interval	1		; Re-check the service every minute until its final/hard state is determined
	}

define service{
	use			generic-service	; Inherit values from a template
	host_name		IP28_S1		; The name of the host the service is associated with
	service_description	PING		; The service description
	check_command		check_ping!200.0,20%!600.0,60%	; The command used to monitor the service
	check_interval	5		; Check the service every 5 minutes under normal conditions
	retry_interval	1		; Re-check the service every minute until its final/hard state is determined
	}

define service{
	use			generic-service	; Inherit values from a template
	host_name		IP29_S3		; The name of the host the service is associated with
	service_description	PING		; The service description
	check_command		check_ping!200.0,20%!600.0,60%	; The command used to monitor the service
	check_interval	5		; Check the service every 5 minutes under normal conditions
	retry_interval	1		; Re-check the service every minute until its final/hard state is determined
	}

define service{
	use			generic-service	; Inherit values from a template
	host_name		IP28_S7		; The name of the host the service is associated with
	service_description	PING		; The service description
	check_command		check_ping!200.0,20%!600.0,60%	; The command used to monitor the service
	check_interval	5		; Check the service every 5 minutes under normal conditions
	retry_interval	1		; Re-check the service every minute until its final/hard state is determined
	}
define service{
	use			generic-service
	host_name		IP3010_S0.0
	service_description	Uptime
	check_command		check_snmp!-C public -o sysUpTime.0
	}
